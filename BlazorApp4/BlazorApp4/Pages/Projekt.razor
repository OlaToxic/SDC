@page "/projekt"

<button class="btn btn-primary" @onclick="NovaTab">Nova Tab</button>

<button class="btn btn-primary" @onclick="DoplnTab">Dopln Tab</button>

<BSDataTable Items="Project" Context="sample" IsResponsive="true" IsStriped="true" @ref="SortableRef">
    <HeaderTemplate>
        <tr>
            <th align="center" scope="col"><a href="javascript:void(0)" @onclick="@(() => SortableRef.Sort("Id"))" @onclick:preventDefault>I.d</a></th>

            <th align="center" scope="col"><a href="javascript:void(0)" @onclick="@(() => SortableRef.Sort("UserName"))" @onclick:preventDefault>User Name</a></th>

            <th align="center" scope="col"><a href="javascript:void(0)" @onclick="@(() => SortableRef.Sort("Email"))" @onclick:preventDefault>Cena</a></th>

            <th align="center" scope="col"><a href="javascript:void(0)" @onclick="@(() => SortableRef.Sort("Dat"))" @onclick:preventDefault>Cena</a></th>

        </tr>
    </HeaderTemplate>

    <ItemTemplate>

        <th scope="row">@sample.Id</th>

        <td>@sample.UserName</td>

        <td>@sample.Email</td>
        <td>@sample.Dat</td>

        <td>
            <!-- Edit the current forecast -->
            <button class="btn btn-primary"
                    //onclick ="(() => EditUser(user))">
                Edit
            </button>
        </td>
    </ItemTemplate>
</BSDataTable>



@code
{
    public List<SampleData> Project { get; set; }
    private BSDataTable<SampleData> SortableRef { get; set; }

    public class SampleData

    {
        public int Id { get; set; }

        public string UserName { get; set; }

        public string Email { get; set; }
        public string Dat { get; set; }

    }



    public void NovaTab() //Test
    {
        string cs = @"Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=SDC;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False";
        using var con = new SqlConnection(cs);
        con.Open();

        using var cmd = new SqlCommand();
        cmd.Connection = con;

        cmd.CommandText = "DROP TABLE IF EXISTS cars";
        cmd.ExecuteNonQuery();

        cmd.CommandText = @"CREATE TABLE cars(
id int identity(1,1) NOT NULL PRIMARY KEY,
name VARCHAR(255) NOT NULL,
price VARCHAR(255) NOT NULL,
)";
        cmd.ExecuteNonQuery();

        cmd.CommandText = "INSERT INTO cars(name, price) VALUES('Audi',52642)";
        cmd.ExecuteNonQuery();

        cmd.CommandText = "INSERT INTO cars(name, price) VALUES('Mercedes',57127)";
        cmd.ExecuteNonQuery();

        cmd.CommandText = "INSERT INTO cars(name, price) VALUES('Skoda',9000)";
        cmd.ExecuteNonQuery();

        cmd.CommandText = "INSERT INTO cars(name, price) VALUES('Volvo',29000)";
        cmd.ExecuteNonQuery();

        cmd.CommandText = "INSERT INTO cars(name, price) VALUES('Bentley',350000)";
        cmd.ExecuteNonQuery();

        cmd.CommandText = "INSERT INTO cars(name, price) VALUES('Citroen',21000)";
        cmd.ExecuteNonQuery();

        cmd.CommandText = "INSERT INTO cars(name, price) VALUES('Hummer',41400)";
        cmd.ExecuteNonQuery();

        cmd.CommandText = "INSERT INTO cars(name, price) VALUES('Volkswagen',21600)";
        cmd.ExecuteNonQuery();

    }

    public void DoplnTab()  //Test
    {

        string cs = @"Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=SDC;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False";
        using var con = new SqlConnection(cs);
        con.Open();

        var query = "INSERT INTO cars(name, price, dart) VALUES(@name, @price, @dart)";
        using var cmd = new SqlCommand(query, con);

        cmd.Parameters.Add(new SqlParameter("@name", SqlDbType.VarChar, 255)).Value = "Trabant";
        cmd.Parameters.Add("@price", SqlDbType.VarChar, 255).Value = "4500";
        cmd.Parameters.Add("@dart", SqlDbType.VarChar, 255).Value = DateTime.Now.ToString();
        cmd.Prepare();

        cmd.ExecuteNonQuery();


    }

    protected override void OnInitialized() //Test
    {

        Project = new List<SampleData>();

        string cs = @"Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=SDC;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False";

        using var con = new SqlConnection(cs);
        con.Open();

        string sql = "SELECT * FROM cars";
        using var cmd = new SqlCommand(sql, con);

        using SqlDataReader rdr = cmd.ExecuteReader();

        while (rdr.Read())
        {
            //Console.WriteLine("{0} {1} {2}", rdr.GetInt32(0), rdr.GetString(1), rdr.GetString(2));

            Project.Add(new SampleData()

            {
                Id = rdr.GetInt32(0),

                UserName = rdr.GetString(1),

                Email = rdr.GetString(2),

                Dat = rdr.GetString(3),

            }); ;
        }
    }
}
